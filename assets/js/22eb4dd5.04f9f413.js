(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{120:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return h}));var n=r(0),i=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var d=i.a.createContext({}),p=function(e){var t=i.a.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=p(e.components);return i.a.createElement(d.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},b=i.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,a=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=p(r),b=n,h=u["".concat(a,".").concat(b)]||u[b]||l[b]||o;return r?i.a.createElement(h,s(s({ref:t},d),{},{components:r})):i.a.createElement(h,s({ref:t},d))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,a=new Array(o);a[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,a[1]=s;for(var d=2;d<o;d++)a[d]=r[d];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},85:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return a})),r.d(t,"metadata",(function(){return s})),r.d(t,"toc",(function(){return c})),r.d(t,"default",(function(){return p}));var n=r(3),i=r(7),o=(r(0),r(120)),a={sidebar_position:4},s={unversionedId:"design-documents/registry",id:"design-documents/registry",isDocsHomePage:!1,title:"Registry",description:"https://registry.hydro-sdk.io",source:"@site/docs/design-documents/registry.md",sourceDirName:"design-documents",slug:"/design-documents/registry",permalink:"/docs/design-documents/registry",editUrl:"https://github.com/hydro-sdk/hydro-sdk.io/edit/main/docs/design-documents/registry.md",version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Over the Air (OTA) Package Files",permalink:"/docs/design-documents/ota"},next:{title:"Hydro-SDK Design",permalink:"/docs/design-documents/architecture"}},c=[{value:"Objective",id:"objective",children:[]},{value:"Background",id:"background",children:[]},{value:"APIs",id:"apis",children:[]}],d={toc:c};function p(e){var t=e.components,r=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},d,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://registry.hydro-sdk.io"},"https://registry.hydro-sdk.io")),Object(o.b)("h2",{id:"objective"},"Objective"),Object(o.b)("p",null,"Provide a set of REST APIs to manage ",Object(o.b)("inlineCode",{parentName:"p"},".ota")," package publishing and management with a default hosted implementation."),Object(o.b)("h2",{id:"background"},"Background"),Object(o.b)("p",null,"Codepush / over the air publishing services are typically separate initiatives from the frameworks which they target. Registry aims to provide an integrated codepush experience for Hydro-SDK."),Object(o.b)("h2",{id:"apis"},"APIs"),Object(o.b)("p",null,"The REST APIs used to communicate with Registry are currently unstable though they are expected to stabilize for a future 1.0.0 release of Hydro-SDK. "),Object(o.b)("p",null,"The API is documented using Swagger at ",Object(o.b)("a",{parentName:"p",href:"https://api.registry.hydro-sdk.io/docs"},"https://api.registry.hydro-sdk.io/docs")),Object(o.b)("p",null,"The client implementation is open-source at ",Object(o.b)("a",{parentName:"p",href:"https://github.com/hydro-sdk/hydro-sdk/blob/master/lib/registry/registryApi.dart"},"https://github.com/hydro-sdk/hydro-sdk/blob/master/lib/registry/registryApi.dart")),Object(o.b)("p",null,"Though the service powering ",Object(o.b)("a",{parentName:"p",href:"https://registry.hydro-sdk.io"},"https://registry.hydro-sdk.io")," is closed-source (and will likely remain so), the APIs are open and Registry implementations can be freely swapped out by end users. Parts of Hydro-SDK which interact with Registry expect an instance of ",Object(o.b)("inlineCode",{parentName:"p"},"RegistryApi"),". ",Object(o.b)("inlineCode",{parentName:"p"},"RegistryApi")," can be configured with a different scheme, host or port than the default which points to the closed-source implementation. Similarly, the ",Object(o.b)("inlineCode",{parentName:"p"},"codepush")," SDK-tool can be provided with ",Object(o.b)("inlineCode",{parentName:"p"},"--registry-scheme"),", ",Object(o.b)("inlineCode",{parentName:"p"},"--registry-host")," and ",Object(o.b)("inlineCode",{parentName:"p"},"--registry-port")," switches to override the default."))}p.isMDXComponent=!0}}]);